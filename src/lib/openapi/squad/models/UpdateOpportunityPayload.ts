/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Request schema for updating an opportunity
 * @export
 * @interface UpdateOpportunityPayload
 */
export interface UpdateOpportunityPayload {
  /**
   * Whether the opportunity has been read
   * @type {boolean}
   * @memberof UpdateOpportunityPayload
   */
  read?: boolean;
  /**
   * Current status of the opportunity
   * @type {string}
   * @memberof UpdateOpportunityPayload
   */
  status?: UpdateOpportunityPayloadStatusEnum;
  /**
   * Title of the opportunity
   * @type {string}
   * @memberof UpdateOpportunityPayload
   */
  title?: string;
  /**
   * Description of the opportunity
   * @type {string}
   * @memberof UpdateOpportunityPayload
   */
  description?: string;
  /**
   * Current state of solution generation
   * @type {string}
   * @memberof UpdateOpportunityPayload
   */
  solutionsGeneratingState?: UpdateOpportunityPayloadSolutionsGeneratingStateEnum;
  /**
   * How the opportunity was created
   * @type {string}
   * @memberof UpdateOpportunityPayload
   */
  createdBy?: UpdateOpportunityPayloadCreatedByEnum;
  /**
   * ID of the opportunity owner
   * @type {string}
   * @memberof UpdateOpportunityPayload
   */
  ownerId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateOpportunityPayload
   */
  feedbackIds?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateOpportunityPayload
   */
  outcomeIds?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateOpportunityPayload
   */
  solutionIds?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateOpportunityPayload
   */
  topicIds?: Array<string>;
}

/**
 * @export
 */
export const UpdateOpportunityPayloadStatusEnum = {
  New: "New",
  Solved: "Solved",
  Planned: "Planned",
  InProgress: "InProgress",
} as const;
export type UpdateOpportunityPayloadStatusEnum =
  (typeof UpdateOpportunityPayloadStatusEnum)[keyof typeof UpdateOpportunityPayloadStatusEnum];

/**
 * @export
 */
export const UpdateOpportunityPayloadSolutionsGeneratingStateEnum = {
  Generating: "generating",
  Generated: "generated",
  Initial: "initial",
  Error: "error",
} as const;
export type UpdateOpportunityPayloadSolutionsGeneratingStateEnum =
  (typeof UpdateOpportunityPayloadSolutionsGeneratingStateEnum)[keyof typeof UpdateOpportunityPayloadSolutionsGeneratingStateEnum];

/**
 * @export
 */
export const UpdateOpportunityPayloadCreatedByEnum = {
  User: "user",
  Generated: "generated",
} as const;
export type UpdateOpportunityPayloadCreatedByEnum =
  (typeof UpdateOpportunityPayloadCreatedByEnum)[keyof typeof UpdateOpportunityPayloadCreatedByEnum];

/**
 * Check if a given object implements the UpdateOpportunityPayload interface.
 */
export function instanceOfUpdateOpportunityPayload(
  value: object,
): value is UpdateOpportunityPayload {
  return true;
}

export function UpdateOpportunityPayloadFromJSON(
  json: any,
): UpdateOpportunityPayload {
  return UpdateOpportunityPayloadFromJSONTyped(json, false);
}

export function UpdateOpportunityPayloadFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpdateOpportunityPayload {
  if (json == null) {
    return json;
  }
  return {
    read: json["read"] == null ? undefined : json["read"],
    status: json["status"] == null ? undefined : json["status"],
    title: json["title"] == null ? undefined : json["title"],
    description: json["description"] == null ? undefined : json["description"],
    solutionsGeneratingState:
      json["solutionsGeneratingState"] == null
        ? undefined
        : json["solutionsGeneratingState"],
    createdBy: json["createdBy"] == null ? undefined : json["createdBy"],
    ownerId: json["ownerId"] == null ? undefined : json["ownerId"],
    feedbackIds: json["feedbackIds"] == null ? undefined : json["feedbackIds"],
    outcomeIds: json["outcomeIds"] == null ? undefined : json["outcomeIds"],
    solutionIds: json["solutionIds"] == null ? undefined : json["solutionIds"],
    topicIds: json["topicIds"] == null ? undefined : json["topicIds"],
  };
}

export function UpdateOpportunityPayloadToJSON(
  json: any,
): UpdateOpportunityPayload {
  return UpdateOpportunityPayloadToJSONTyped(json, false);
}

export function UpdateOpportunityPayloadToJSONTyped(
  value?: UpdateOpportunityPayload | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    read: value["read"],
    status: value["status"],
    title: value["title"],
    description: value["description"],
    solutionsGeneratingState: value["solutionsGeneratingState"],
    createdBy: value["createdBy"],
    ownerId: value["ownerId"],
    feedbackIds: value["feedbackIds"],
    outcomeIds: value["outcomeIds"],
    solutionIds: value["solutionIds"],
    topicIds: value["topicIds"],
  };
}
