/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Feedback } from './Feedback.js';
import {
    FeedbackFromJSON,
    FeedbackFromJSONTyped,
    FeedbackToJSON,
    FeedbackToJSONTyped,
} from './Feedback.js';
import type { Opportunity } from './Opportunity.js';
import {
    OpportunityFromJSON,
    OpportunityFromJSONTyped,
    OpportunityToJSON,
    OpportunityToJSONTyped,
} from './Opportunity.js';

/**
 * Topic data
 * @export
 * @interface OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
 */
export interface OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData {
    /**
     * 
     * @type {Array<Opportunity>}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    opportunities: Array<Opportunity>;
    /**
     * 
     * @type {Array<Feedback>}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    feedback: Array<Feedback>;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    id: string;
    /**
     * Title of the topic
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    title: string;
    /**
     * Description of the topic
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    description: string;
    /**
     * Creation timestamp
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    createdAt: string;
    /**
     * Last update timestamp
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData interface.
 */
export function instanceOfOrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData(value: object): value is OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData {
    if (!('opportunities' in value) || value['opportunities'] === undefined) return false;
    if (!('feedback' in value) || value['feedback'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseDataFromJSON(json: any): OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData {
    return OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseDataFromJSONTyped(json, false);
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData {
    if (json == null) {
        return json;
    }
    return {
        
        'opportunities': ((json['opportunities'] as Array<any>).map(OpportunityFromJSON)),
        'feedback': ((json['feedback'] as Array<any>).map(FeedbackFromJSON)),
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseDataToJSON(json: any): OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData {
    return OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseDataToJSONTyped(json, false);
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseDataToJSONTyped(value?: OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPost200ResponseData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'opportunities': ((value['opportunities'] as Array<any>).map(OpportunityToJSON)),
        'feedback': ((value['feedback'] as Array<any>).map(FeedbackToJSON)),
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

