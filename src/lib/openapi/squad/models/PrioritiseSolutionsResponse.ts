/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { PrioritiseSolutionsResponseUpdatedSolutionsInner } from './PrioritiseSolutionsResponseUpdatedSolutionsInner.js';
import {
    PrioritiseSolutionsResponseUpdatedSolutionsInnerFromJSON,
    PrioritiseSolutionsResponseUpdatedSolutionsInnerFromJSONTyped,
    PrioritiseSolutionsResponseUpdatedSolutionsInnerToJSON,
    PrioritiseSolutionsResponseUpdatedSolutionsInnerToJSONTyped,
} from './PrioritiseSolutionsResponseUpdatedSolutionsInner.js';

/**
 * Response schema for prioritising solutions
 * @export
 * @interface PrioritiseSolutionsResponse
 */
export interface PrioritiseSolutionsResponse {
    /**
     * List of updated solutions with their new priorities. Note this may include more solutions than the input, if a re-balance was triggered.
     * @type {Array<PrioritiseSolutionsResponseUpdatedSolutionsInner>}
     * @memberof PrioritiseSolutionsResponse
     */
    updatedSolutions: Array<PrioritiseSolutionsResponseUpdatedSolutionsInner>;
}

/**
 * Check if a given object implements the PrioritiseSolutionsResponse interface.
 */
export function instanceOfPrioritiseSolutionsResponse(value: object): value is PrioritiseSolutionsResponse {
    if (!('updatedSolutions' in value) || value['updatedSolutions'] === undefined) return false;
    return true;
}

export function PrioritiseSolutionsResponseFromJSON(json: any): PrioritiseSolutionsResponse {
    return PrioritiseSolutionsResponseFromJSONTyped(json, false);
}

export function PrioritiseSolutionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrioritiseSolutionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'updatedSolutions': ((json['updatedSolutions'] as Array<any>).map(PrioritiseSolutionsResponseUpdatedSolutionsInnerFromJSON)),
    };
}

export function PrioritiseSolutionsResponseToJSON(json: any): PrioritiseSolutionsResponse {
    return PrioritiseSolutionsResponseToJSONTyped(json, false);
}

export function PrioritiseSolutionsResponseToJSONTyped(value?: PrioritiseSolutionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'updatedSolutions': ((value['updatedSolutions'] as Array<any>).map(PrioritiseSolutionsResponseUpdatedSolutionsInnerToJSON)),
    };
}

