/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: help@meetsquad.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * A single data point in a metric's time series
 * @export
 * @interface MetricTimeseriesPointOutput
 */
export interface MetricTimeseriesPointOutput {
    /**
     * ISO datetime string for the data point
     * @type {Date}
     * @memberof MetricTimeseriesPointOutput
     */
    date: Date;
    /**
     * Metric value at this point in time
     * @type {number}
     * @memberof MetricTimeseriesPointOutput
     */
    value: number;
}

/**
 * Check if a given object implements the MetricTimeseriesPointOutput interface.
 */
export function instanceOfMetricTimeseriesPointOutput(value: object): value is MetricTimeseriesPointOutput {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function MetricTimeseriesPointOutputFromJSON(json: any): MetricTimeseriesPointOutput {
    return MetricTimeseriesPointOutputFromJSONTyped(json, false);
}

export function MetricTimeseriesPointOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricTimeseriesPointOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'value': json['value'],
    };
}

export function MetricTimeseriesPointOutputToJSON(json: any): MetricTimeseriesPointOutput {
    return MetricTimeseriesPointOutputToJSONTyped(json, false);
}

export function MetricTimeseriesPointOutputToJSONTyped(value?: MetricTimeseriesPointOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': ((value['date']).toISOString()),
        'value': value['value'],
    };
}

