/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 2.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Request schema for creating an organisation
 * @export
 * @interface CreateOrganisationPayload
 */
export interface CreateOrganisationPayload {
    /**
     * Name of the organisation
     * @type {string}
     * @memberof CreateOrganisationPayload
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationPayload
     */
    homepageUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisationPayload
     */
    logoUrl: string | null;
}

/**
 * Check if a given object implements the CreateOrganisationPayload interface.
 */
export function instanceOfCreateOrganisationPayload(value: object): value is CreateOrganisationPayload {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('homepageUrl' in value) || value['homepageUrl'] === undefined) return false;
    if (!('logoUrl' in value) || value['logoUrl'] === undefined) return false;
    return true;
}

export function CreateOrganisationPayloadFromJSON(json: any): CreateOrganisationPayload {
    return CreateOrganisationPayloadFromJSONTyped(json, false);
}

export function CreateOrganisationPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganisationPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'homepageUrl': json['homepageUrl'],
        'logoUrl': json['logoUrl'],
    };
}

export function CreateOrganisationPayloadToJSON(json: any): CreateOrganisationPayload {
    return CreateOrganisationPayloadToJSONTyped(json, false);
}

export function CreateOrganisationPayloadToJSONTyped(value?: CreateOrganisationPayload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'homepageUrl': value['homepageUrl'],
        'logoUrl': value['logoUrl'],
    };
}

