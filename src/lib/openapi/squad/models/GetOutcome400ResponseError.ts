/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: help@meetsquad.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GetOutcome400ResponseError
 */
export interface GetOutcome400ResponseError {
    [key: string]: any | any;
    /**
     * Error code identifier
     * @type {string}
     * @memberof GetOutcome400ResponseError
     */
    code: string;
    /**
     * Human-readable error description
     * @type {string}
     * @memberof GetOutcome400ResponseError
     */
    description: string;
    /**
     * List of field names that are missing or invalid
     * @type {Array<string>}
     * @memberof GetOutcome400ResponseError
     */
    fields?: Array<string>;
    /**
     * Detailed validation error information for each invalid field
     * @type {{ [key: string]: any; }}
     * @memberof GetOutcome400ResponseError
     */
    validationErrors?: { [key: string]: any; };
}

/**
 * Check if a given object implements the GetOutcome400ResponseError interface.
 */
export function instanceOfGetOutcome400ResponseError(value: object): value is GetOutcome400ResponseError {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function GetOutcome400ResponseErrorFromJSON(json: any): GetOutcome400ResponseError {
    return GetOutcome400ResponseErrorFromJSONTyped(json, false);
}

export function GetOutcome400ResponseErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOutcome400ResponseError {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'code': json['code'],
        'description': json['description'],
        'fields': json['fields'] == null ? undefined : json['fields'],
        'validationErrors': json['validationErrors'] == null ? undefined : json['validationErrors'],
    };
}

export function GetOutcome400ResponseErrorToJSON(json: any): GetOutcome400ResponseError {
    return GetOutcome400ResponseErrorToJSONTyped(json, false);
}

export function GetOutcome400ResponseErrorToJSONTyped(value?: GetOutcome400ResponseError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'code': value['code'],
        'description': value['description'],
        'fields': value['fields'],
        'validationErrors': value['validationErrors'],
    };
}

