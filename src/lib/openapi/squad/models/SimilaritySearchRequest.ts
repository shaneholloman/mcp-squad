/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: help@meetsquad.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface SimilaritySearchRequest
 */
export interface SimilaritySearchRequest {
    /**
     * Query string
     * @type {string}
     * @memberof SimilaritySearchRequest
     */
    query: string;
    /**
     * List of Pinecone sources to search over
     * @type {Array<string>}
     * @memberof SimilaritySearchRequest
     */
    filters: Array<SimilaritySearchRequestFiltersEnum>;
}


/**
 * @export
 */
export const SimilaritySearchRequestFiltersEnum = {
    KnowledgeBase: 'knowledge-base',
    Insights: 'insights',
    Opportunities: 'opportunities',
    Solutions: 'solutions'
} as const;
export type SimilaritySearchRequestFiltersEnum = typeof SimilaritySearchRequestFiltersEnum[keyof typeof SimilaritySearchRequestFiltersEnum];


/**
 * Check if a given object implements the SimilaritySearchRequest interface.
 */
export function instanceOfSimilaritySearchRequest(value: object): value is SimilaritySearchRequest {
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('filters' in value) || value['filters'] === undefined) return false;
    return true;
}

export function SimilaritySearchRequestFromJSON(json: any): SimilaritySearchRequest {
    return SimilaritySearchRequestFromJSONTyped(json, false);
}

export function SimilaritySearchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimilaritySearchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'],
        'filters': json['filters'],
    };
}

export function SimilaritySearchRequestToJSON(json: any): SimilaritySearchRequest {
    return SimilaritySearchRequestToJSONTyped(json, false);
}

export function SimilaritySearchRequestToJSONTyped(value?: SimilaritySearchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': value['query'],
        'filters': value['filters'],
    };
}

