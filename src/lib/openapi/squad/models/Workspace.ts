/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Workspace data
 * @export
 * @interface Workspace
 */
export interface Workspace {
    /**
     * 
     * @type {string}
     * @memberof Workspace
     */
    id: string;
    /**
     * Name of the workspace
     * @type {string}
     * @memberof Workspace
     */
    name: string;
    /**
     * URL to the workspace's homepage
     * @type {string}
     * @memberof Workspace
     */
    homepageUrl?: string;
    /**
     * URL to the workspace's logo
     * @type {string}
     * @memberof Workspace
     */
    logoUrl?: string;
    /**
     * Mission statement for the workspace
     * @type {string}
     * @memberof Workspace
     */
    missionStatement: string;
    /**
     * Detailed description of the workspace
     * @type {string}
     * @memberof Workspace
     */
    description?: string;
    /**
     * Creation timestamp
     * @type {string}
     * @memberof Workspace
     */
    createdAt: string;
    /**
     * Last update timestamp
     * @type {string}
     * @memberof Workspace
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the Workspace interface.
 */
export function instanceOfWorkspace(value: object): value is Workspace {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('missionStatement' in value) || value['missionStatement'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function WorkspaceFromJSON(json: any): Workspace {
    return WorkspaceFromJSONTyped(json, false);
}

export function WorkspaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Workspace {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'homepageUrl': json['homepageUrl'] == null ? undefined : json['homepageUrl'],
        'logoUrl': json['logoUrl'] == null ? undefined : json['logoUrl'],
        'missionStatement': json['missionStatement'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function WorkspaceToJSON(json: any): Workspace {
    return WorkspaceToJSONTyped(json, false);
}

export function WorkspaceToJSONTyped(value?: Workspace | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'homepageUrl': value['homepageUrl'],
        'logoUrl': value['logoUrl'],
        'missionStatement': value['missionStatement'],
        'description': value['description'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

