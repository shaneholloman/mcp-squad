/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: help@meetsquad.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CreateOrganisation200ResponseDataHomepageUrl } from './CreateOrganisation200ResponseDataHomepageUrl.js';
import {
    CreateOrganisation200ResponseDataHomepageUrlFromJSON,
    CreateOrganisation200ResponseDataHomepageUrlFromJSONTyped,
    CreateOrganisation200ResponseDataHomepageUrlToJSON,
    CreateOrganisation200ResponseDataHomepageUrlToJSONTyped,
} from './CreateOrganisation200ResponseDataHomepageUrl.js';
import type { OrganisationAccountTypeEnum } from './OrganisationAccountTypeEnum.js';
import {
    OrganisationAccountTypeEnumFromJSON,
    OrganisationAccountTypeEnumFromJSONTyped,
    OrganisationAccountTypeEnumToJSON,
    OrganisationAccountTypeEnumToJSONTyped,
} from './OrganisationAccountTypeEnum.js';
import type { CreateOrganisation200ResponseDataLogoUrl } from './CreateOrganisation200ResponseDataLogoUrl.js';
import {
    CreateOrganisation200ResponseDataLogoUrlFromJSON,
    CreateOrganisation200ResponseDataLogoUrlFromJSONTyped,
    CreateOrganisation200ResponseDataLogoUrlToJSON,
    CreateOrganisation200ResponseDataLogoUrlToJSONTyped,
} from './CreateOrganisation200ResponseDataLogoUrl.js';

/**
 * Organisation data
 * @export
 * @interface CreateOrganisation200ResponseData
 */
export interface CreateOrganisation200ResponseData {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    id: string;
    /**
     * Name of the organisation
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    name: string;
    /**
     * Stripe customer ID for billing
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    stripeCustomerId?: string;
    /**
     * 
     * @type {CreateOrganisation200ResponseDataHomepageUrl}
     * @memberof CreateOrganisation200ResponseData
     */
    homepageUrl?: CreateOrganisation200ResponseDataHomepageUrl;
    /**
     * 
     * @type {CreateOrganisation200ResponseDataLogoUrl}
     * @memberof CreateOrganisation200ResponseData
     */
    logoUrl?: CreateOrganisation200ResponseDataLogoUrl;
    /**
     * Creation timestamp
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    createdAt: string;
    /**
     * Account type
     * @type {OrganisationAccountTypeEnum}
     * @memberof CreateOrganisation200ResponseData
     */
    accountType: OrganisationAccountTypeEnum;
    /**
     * The start date of the current billing cycle.
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    billingCycleStartDate: string;
    /**
     * Number of flex credits available at the start of the current billing cycle.
     * @type {number}
     * @memberof CreateOrganisation200ResponseData
     */
    billingCycleFlexCreditAllowance: number;
    /**
     * Last update timestamp
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    updatedAt: string;
    /**
     * Status of the organisation
     * @type {string}
     * @memberof CreateOrganisation200ResponseData
     */
    status: CreateOrganisation200ResponseDataStatusEnum;
    /**
     * Number of unprocessed insight items
     * @type {number}
     * @memberof CreateOrganisation200ResponseData
     */
    unprocessedFeedbackCount: number;
}


/**
 * @export
 */
export const CreateOrganisation200ResponseDataStatusEnum = {
    Active: 'ACTIVE',
    Archived: 'ARCHIVED'
} as const;
export type CreateOrganisation200ResponseDataStatusEnum = typeof CreateOrganisation200ResponseDataStatusEnum[keyof typeof CreateOrganisation200ResponseDataStatusEnum];


/**
 * Check if a given object implements the CreateOrganisation200ResponseData interface.
 */
export function instanceOfCreateOrganisation200ResponseData(value: object): value is CreateOrganisation200ResponseData {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('accountType' in value) || value['accountType'] === undefined) return false;
    if (!('billingCycleStartDate' in value) || value['billingCycleStartDate'] === undefined) return false;
    if (!('billingCycleFlexCreditAllowance' in value) || value['billingCycleFlexCreditAllowance'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('unprocessedFeedbackCount' in value) || value['unprocessedFeedbackCount'] === undefined) return false;
    return true;
}

export function CreateOrganisation200ResponseDataFromJSON(json: any): CreateOrganisation200ResponseData {
    return CreateOrganisation200ResponseDataFromJSONTyped(json, false);
}

export function CreateOrganisation200ResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganisation200ResponseData {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'name': json['name'],
        'stripeCustomerId': json['stripeCustomerId'] == null ? undefined : json['stripeCustomerId'],
        'homepageUrl': json['homepageUrl'] == null ? undefined : CreateOrganisation200ResponseDataHomepageUrlFromJSON(json['homepageUrl']),
        'logoUrl': json['logoUrl'] == null ? undefined : CreateOrganisation200ResponseDataLogoUrlFromJSON(json['logoUrl']),
        'createdAt': json['createdAt'],
        'accountType': OrganisationAccountTypeEnumFromJSON(json['accountType']),
        'billingCycleStartDate': json['billingCycleStartDate'],
        'billingCycleFlexCreditAllowance': json['billingCycleFlexCreditAllowance'],
        'updatedAt': json['updatedAt'],
        'status': json['status'],
        'unprocessedFeedbackCount': json['unprocessedFeedbackCount'],
    };
}

export function CreateOrganisation200ResponseDataToJSON(json: any): CreateOrganisation200ResponseData {
    return CreateOrganisation200ResponseDataToJSONTyped(json, false);
}

export function CreateOrganisation200ResponseDataToJSONTyped(value?: CreateOrganisation200ResponseData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'id': value['id'],
        'name': value['name'],
        'stripeCustomerId': value['stripeCustomerId'],
        'homepageUrl': CreateOrganisation200ResponseDataHomepageUrlToJSON(value['homepageUrl']),
        'logoUrl': CreateOrganisation200ResponseDataLogoUrlToJSON(value['logoUrl']),
        'createdAt': value['createdAt'],
        'accountType': OrganisationAccountTypeEnumToJSON(value['accountType']),
        'billingCycleStartDate': value['billingCycleStartDate'],
        'billingCycleFlexCreditAllowance': value['billingCycleFlexCreditAllowance'],
        'updatedAt': value['updatedAt'],
        'status': value['status'],
        'unprocessedFeedbackCount': value['unprocessedFeedbackCount'],
    };
}

