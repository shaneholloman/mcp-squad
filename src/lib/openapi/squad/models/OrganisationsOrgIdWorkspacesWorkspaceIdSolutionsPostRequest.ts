/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInner } from './OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInner.js';
import {
    OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInnerFromJSON,
    OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInnerFromJSONTyped,
    OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInnerToJSON,
    OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInnerToJSONTyped,
} from './OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInner.js';

/**
 * Request schema for creating a solution
 * @export
 * @interface OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
 */
export interface OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest {
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    status?: OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestStatusEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    pros: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    cons: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    hideContent?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    createdBy?: OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestCreatedByEnum;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    ownerId?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    systemPrompt?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    aiProcessingState?: OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestAiProcessingStateEnum;
    /**
     * 
     * @type {Array<OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInner>}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest
     */
    refinementLog?: Array<OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInner>;
}


/**
 * @export
 */
export const OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestStatusEnum = {
    New: 'New',
    Solved: 'Solved',
    Planned: 'Planned',
    InProgress: 'InProgress'
} as const;
export type OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestStatusEnum = typeof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestStatusEnum[keyof typeof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestStatusEnum];

/**
 * @export
 */
export const OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestCreatedByEnum = {
    User: 'user',
    Generated: 'generated'
} as const;
export type OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestCreatedByEnum = typeof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestCreatedByEnum[keyof typeof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestCreatedByEnum];

/**
 * @export
 */
export const OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestAiProcessingStateEnum = {
    Initial: 'INITIAL',
    Processing: 'PROCESSING',
    Finished: 'FINISHED',
    Error: 'ERROR'
} as const;
export type OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestAiProcessingStateEnum = typeof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestAiProcessingStateEnum[keyof typeof OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestAiProcessingStateEnum];


/**
 * Check if a given object implements the OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest interface.
 */
export function instanceOfOrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest(value: object): value is OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('pros' in value) || value['pros'] === undefined) return false;
    if (!('cons' in value) || value['cons'] === undefined) return false;
    return true;
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestFromJSON(json: any): OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest {
    return OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestFromJSONTyped(json, false);
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'status': json['status'] == null ? undefined : json['status'],
        'pros': json['pros'],
        'cons': json['cons'],
        'hideContent': json['hideContent'] == null ? undefined : json['hideContent'],
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'id': json['id'] == null ? undefined : json['id'],
        'systemPrompt': json['systemPrompt'] == null ? undefined : json['systemPrompt'],
        'aiProcessingState': json['aiProcessingState'] == null ? undefined : json['aiProcessingState'],
        'refinementLog': json['refinementLog'] == null ? undefined : ((json['refinementLog'] as Array<any>).map(OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInnerFromJSON)),
    };
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestToJSON(json: any): OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest {
    return OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestToJSONTyped(json, false);
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequestToJSONTyped(value?: OrganisationsOrgIdWorkspacesWorkspaceIdSolutionsPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'status': value['status'],
        'pros': value['pros'],
        'cons': value['cons'],
        'hideContent': value['hideContent'],
        'createdBy': value['createdBy'],
        'ownerId': value['ownerId'],
        'id': value['id'],
        'systemPrompt': value['systemPrompt'],
        'aiProcessingState': value['aiProcessingState'],
        'refinementLog': value['refinementLog'] == null ? undefined : ((value['refinementLog'] as Array<any>).map(OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseInnerRefinementLogInnerToJSON)),
    };
}

