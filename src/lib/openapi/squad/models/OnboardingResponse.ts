/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Outcome } from './Outcome.js';
import {
    OutcomeFromJSON,
    OutcomeFromJSONTyped,
    OutcomeToJSON,
    OutcomeToJSONTyped,
} from './Outcome.js';
import type { OnboardingResponseOrganisation } from './OnboardingResponseOrganisation.js';
import {
    OnboardingResponseOrganisationFromJSON,
    OnboardingResponseOrganisationFromJSONTyped,
    OnboardingResponseOrganisationToJSON,
    OnboardingResponseOrganisationToJSONTyped,
} from './OnboardingResponseOrganisation.js';
import type { Workspace } from './Workspace.js';
import {
    WorkspaceFromJSON,
    WorkspaceFromJSONTyped,
    WorkspaceToJSON,
    WorkspaceToJSONTyped,
} from './Workspace.js';

/**
 * Response schema for onboarding
 * @export
 * @interface OnboardingResponse
 */
export interface OnboardingResponse {
    /**
     * 
     * @type {Workspace}
     * @memberof OnboardingResponse
     */
    workspace: Workspace;
    /**
     * 
     * @type {Array<Outcome>}
     * @memberof OnboardingResponse
     */
    outcomes: Array<Outcome>;
    /**
     * 
     * @type {OnboardingResponseOrganisation}
     * @memberof OnboardingResponse
     */
    organisation: OnboardingResponseOrganisation;
}

/**
 * Check if a given object implements the OnboardingResponse interface.
 */
export function instanceOfOnboardingResponse(value: object): value is OnboardingResponse {
    if (!('workspace' in value) || value['workspace'] === undefined) return false;
    if (!('outcomes' in value) || value['outcomes'] === undefined) return false;
    if (!('organisation' in value) || value['organisation'] === undefined) return false;
    return true;
}

export function OnboardingResponseFromJSON(json: any): OnboardingResponse {
    return OnboardingResponseFromJSONTyped(json, false);
}

export function OnboardingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OnboardingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'workspace': WorkspaceFromJSON(json['workspace']),
        'outcomes': ((json['outcomes'] as Array<any>).map(OutcomeFromJSON)),
        'organisation': OnboardingResponseOrganisationFromJSON(json['organisation']),
    };
}

export function OnboardingResponseToJSON(json: any): OnboardingResponse {
    return OnboardingResponseToJSONTyped(json, false);
}

export function OnboardingResponseToJSONTyped(value?: OnboardingResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'workspace': WorkspaceToJSON(value['workspace']),
        'outcomes': ((value['outcomes'] as Array<any>).map(OutcomeToJSON)),
        'organisation': OnboardingResponseOrganisationToJSON(value['organisation']),
    };
}

