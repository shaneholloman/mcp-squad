/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Feedback data from a user
 * @export
 * @interface OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
 */
export interface OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest {
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  id?: string;
  /**
   * Type of feedback
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  type: OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestTypeEnum;
  /**
   * Source of the feedback
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  source: string;
  /**
   * Title of the feedback
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  title: string;
  /**
   * Description of the feedback
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  description: string;
  /**
   * Detailed feedback content
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  feedback: string;
  /**
   * ID of the feedback owner
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  ownerId?: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  organisationId: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  workspaceId: string;
  /**
   *
   * @type {boolean}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest
   */
  seen?: boolean;
}

/**
 * @export
 */
export const OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestTypeEnum =
  {
    Feedback: "Feedback",
    Bug: "Bug",
    FeatureRequest: "FeatureRequest",
  } as const;
export type OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestTypeEnum =
  (typeof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestTypeEnum)[keyof typeof OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestTypeEnum];

/**
 * Check if a given object implements the OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest interface.
 */
export function instanceOfOrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest(
  value: object,
): value is OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest {
  if (!("type" in value) || value["type"] === undefined) return false;
  if (!("source" in value) || value["source"] === undefined) return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined)
    return false;
  if (!("feedback" in value) || value["feedback"] === undefined) return false;
  if (!("organisationId" in value) || value["organisationId"] === undefined)
    return false;
  if (!("workspaceId" in value) || value["workspaceId"] === undefined)
    return false;
  return true;
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestFromJSON(
  json: any,
): OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest {
  return OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestFromJSONTyped(
    json,
    false,
  );
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    type: json["type"],
    source: json["source"],
    title: json["title"],
    description: json["description"],
    feedback: json["feedback"],
    ownerId: json["ownerId"] == null ? undefined : json["ownerId"],
    organisationId: json["organisationId"],
    workspaceId: json["workspaceId"],
    seen: json["seen"] == null ? undefined : json["seen"],
  };
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestToJSON(
  json: any,
): OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest {
  return OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestToJSONTyped(
    json,
    false,
  );
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequestToJSONTyped(
  value?: OrganisationsOrgIdWorkspacesWorkspaceIdFeedbackPostRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    type: value["type"],
    source: value["source"],
    title: value["title"],
    description: value["description"],
    feedback: value["feedback"],
    ownerId: value["ownerId"],
    organisationId: value["organisationId"],
    workspaceId: value["workspaceId"],
    seen: value["seen"],
  };
}
