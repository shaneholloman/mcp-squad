/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Knowledge base document upload request
 * @export
 * @interface KnowledgeBaseDocumentUploadPayload
 */
export interface KnowledgeBaseDocumentUploadPayload {
  /**
   * Name of the document file
   * @type {string}
   * @memberof KnowledgeBaseDocumentUploadPayload
   */
  fileName: string;
  /**
   * Base64 encoded content of the file
   * @type {string}
   * @memberof KnowledgeBaseDocumentUploadPayload
   */
  fileContent: string;
  /**
   * MIME type of the document
   * @type {string}
   * @memberof KnowledgeBaseDocumentUploadPayload
   */
  mimeType: string;
}

/**
 * Check if a given object implements the KnowledgeBaseDocumentUploadPayload interface.
 */
export function instanceOfKnowledgeBaseDocumentUploadPayload(
  value: object,
): value is KnowledgeBaseDocumentUploadPayload {
  if (!("fileName" in value) || value["fileName"] === undefined) return false;
  if (!("fileContent" in value) || value["fileContent"] === undefined)
    return false;
  if (!("mimeType" in value) || value["mimeType"] === undefined) return false;
  return true;
}

export function KnowledgeBaseDocumentUploadPayloadFromJSON(
  json: any,
): KnowledgeBaseDocumentUploadPayload {
  return KnowledgeBaseDocumentUploadPayloadFromJSONTyped(json, false);
}

export function KnowledgeBaseDocumentUploadPayloadFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): KnowledgeBaseDocumentUploadPayload {
  if (json == null) {
    return json;
  }
  return {
    fileName: json["fileName"],
    fileContent: json["fileContent"],
    mimeType: json["mimeType"],
  };
}

export function KnowledgeBaseDocumentUploadPayloadToJSON(
  json: any,
): KnowledgeBaseDocumentUploadPayload {
  return KnowledgeBaseDocumentUploadPayloadToJSONTyped(json, false);
}

export function KnowledgeBaseDocumentUploadPayloadToJSONTyped(
  value?: KnowledgeBaseDocumentUploadPayload | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    fileName: value["fileName"],
    fileContent: value["fileContent"],
    mimeType: value["mimeType"],
  };
}
