/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInner } from "./OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInner.js";
import {
  OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInnerFromJSON,
  OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInnerToJSON,
} from "./OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInner.js";

/**
 * Requirement data for a product or feature
 * @export
 * @interface OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
 */
export interface OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner {
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  systemPrompt: string | null;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  aiProcessingState: OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerAiProcessingStateEnum;
  /**
   *
   * @type {Array<OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInner>}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  refinementLog: Array<OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInner>;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  feature: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  requirements: string;
  /**
   *
   * @type {boolean}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  hideContent: boolean;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  ownerId?: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  createdAt: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  updatedAt: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner
   */
  status: OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerStatusEnum;
}

/**
 * @export
 */
export const OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerAiProcessingStateEnum =
  {
    Initial: "INITIAL",
    Processing: "PROCESSING",
    Finished: "FINISHED",
    Error: "ERROR",
  } as const;
export type OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerAiProcessingStateEnum =
  (typeof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerAiProcessingStateEnum)[keyof typeof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerAiProcessingStateEnum];

/**
 * @export
 */
export const OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerStatusEnum =
  {
    Draft: "draft",
    Ready: "ready",
    Complete: "complete",
  } as const;
export type OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerStatusEnum =
  (typeof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerStatusEnum)[keyof typeof OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerStatusEnum];

/**
 * Check if a given object implements the OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner interface.
 */
export function instanceOfOrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner(
  value: object,
): value is OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("systemPrompt" in value) || value["systemPrompt"] === undefined)
    return false;
  if (
    !("aiProcessingState" in value) ||
    value["aiProcessingState"] === undefined
  )
    return false;
  if (!("refinementLog" in value) || value["refinementLog"] === undefined)
    return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined)
    return false;
  if (!("feature" in value) || value["feature"] === undefined) return false;
  if (!("requirements" in value) || value["requirements"] === undefined)
    return false;
  if (!("hideContent" in value) || value["hideContent"] === undefined)
    return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  return true;
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerFromJSON(
  json: any,
): OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner {
  return OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerFromJSONTyped(
    json,
    false,
  );
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    systemPrompt: json["systemPrompt"],
    aiProcessingState: json["aiProcessingState"],
    refinementLog: (json["refinementLog"] as Array<any>).map(
      OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInnerFromJSON,
    ),
    title: json["title"],
    description: json["description"],
    feature: json["feature"],
    requirements: json["requirements"],
    hideContent: json["hideContent"],
    ownerId: json["ownerId"] == null ? undefined : json["ownerId"],
    createdAt: json["createdAt"],
    updatedAt: json["updatedAt"],
    status: json["status"],
  };
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerToJSON(
  json: any,
): OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner {
  return OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerToJSONTyped(
    json,
    false,
  );
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerToJSONTyped(
  value?: OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInner | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    systemPrompt: value["systemPrompt"],
    aiProcessingState: value["aiProcessingState"],
    refinementLog: (value["refinementLog"] as Array<any>).map(
      OrganisationsOrgIdWorkspacesWorkspaceIdRequirementsGet200ResponseDataInnerRefinementLogInnerToJSON,
    ),
    title: value["title"],
    description: value["description"],
    feature: value["feature"],
    requirements: value["requirements"],
    hideContent: value["hideContent"],
    ownerId: value["ownerId"],
    createdAt: value["createdAt"],
    updatedAt: value["updatedAt"],
    status: value["status"],
  };
}
