/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
 */
export interface OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner {
    /**
     * Unique identifier for the outcome
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    id: string;
    /**
     * Title of the outcome
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    title: string;
    /**
     * Detailed description of the outcome
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    description: string;
    /**
     * Priority level of the outcome
     * @type {number}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    priority: number;
    /**
     * Trend indicator for the outcome
     * @type {number}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    trend: number;
    /**
     * List of analytic events associated with the outcome
     * @type {Array<string>}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    analyticEvents: Array<string>;
    /**
     * Whether the outcome content should be hidden
     * @type {boolean}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    hideContent: boolean;
    /**
     * ID of the outcome owner
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    ownerId?: string;
    /**
     * Creation timestamp
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    createdAt: string;
    /**
     * Last update timestamp
     * @type {string}
     * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner interface.
 */
export function instanceOfOrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner(value: object): value is OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    if (!('trend' in value) || value['trend'] === undefined) return false;
    if (!('analyticEvents' in value) || value['analyticEvents'] === undefined) return false;
    if (!('hideContent' in value) || value['hideContent'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInnerFromJSON(json: any): OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner {
    return OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInnerFromJSONTyped(json, false);
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'priority': json['priority'],
        'trend': json['trend'],
        'analyticEvents': json['analyticEvents'],
        'hideContent': json['hideContent'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInnerToJSON(json: any): OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner {
    return OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInnerToJSONTyped(json, false);
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInnerToJSONTyped(value?: OrganisationsOrgIdWorkspacesWorkspaceIdOutcomesGet200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'priority': value['priority'],
        'trend': value['trend'],
        'analyticEvents': value['analyticEvents'],
        'hideContent': value['hideContent'],
        'ownerId': value['ownerId'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

