/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Request schema for creating a topic
 * @export
 * @interface OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest
 */
export interface OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest {
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest
   */
  id?: string;
}

/**
 * Check if a given object implements the OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest interface.
 */
export function instanceOfOrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest(
  value: object,
): value is OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest {
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined)
    return false;
  return true;
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequestFromJSON(
  json: any,
): OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest {
  return OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequestFromJSONTyped(
    json,
    false,
  );
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest {
  if (json == null) {
    return json;
  }
  return {
    title: json["title"],
    description: json["description"],
    id: json["id"] == null ? undefined : json["id"],
  };
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequestToJSON(
  json: any,
): OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest {
  return OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequestToJSONTyped(
    json,
    false,
  );
}

export function OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequestToJSONTyped(
  value?: OrganisationsOrgIdWorkspacesWorkspaceIdTopicsPostRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    title: value["title"],
    description: value["description"],
    id: value["id"],
  };
}
