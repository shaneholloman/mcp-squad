/* tslint:disable */
/* eslint-disable */
/**
 * Squad API
 * API for managing Squad resources
 *
 * The version of the OpenAPI document: 0.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  V1WhoamiGet200Response,
} from '../models/index';
import {
    V1WhoamiGet200ResponseFromJSON,
    V1WhoamiGet200ResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class AuthenticationApi extends runtime.BaseAPI {

    /**
     * Returns the ID and name of the authenticated user\'s organization and workspace. This is only callable by an API key which is workspace scoped.
     * Retrieve authenticated user\'s organization and workspace information
     */
    async v1WhoamiGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1WhoamiGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/v1/whoami`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1WhoamiGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the ID and name of the authenticated user\'s organization and workspace. This is only callable by an API key which is workspace scoped.
     * Retrieve authenticated user\'s organization and workspace information
     */
    async v1WhoamiGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1WhoamiGet200Response> {
        const response = await this.v1WhoamiGetRaw(initOverrides);
        return await response.value();
    }

}
