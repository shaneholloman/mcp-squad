{
  "openapi": "3.0.0",
  "info": {
    "title": "Squad API",
    "version": "0.14.0",
    "description": "API for managing Squad resources"
  },
  "servers": [
    {
      "url": "https://api.meetsquad.ai",
      "description": "Production server"
    },
    {
      "url": "https://api.meetsquad.ai",
      "description": "Staging server"
    },
    {
      "url": "https://dev.api.meetsquad.ai",
      "description": "Development server"
    }
  ],
  "paths": {
    "/organisations/{orgId}/workspaces/{workspaceId}/outcomes": {
      "post": {
        "summary": "Create a new outcome",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the outcome",
                    "example": "Increase User Engagement"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the outcome",
                    "example": "We aim to increase daily active users by 25% in Q3"
                  },
                  "priority": {
                    "type": "number",
                    "description": "Priority level of the outcome",
                    "example": 1
                  },
                  "trend": {
                    "type": "number",
                    "description": "Trend indicator for the outcome",
                    "example": 0
                  },
                  "analyticEvents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of analytic events associated with the outcome",
                    "example": [
                      "user_signup",
                      "feature_usage"
                    ]
                  },
                  "hideContent": {
                    "type": "boolean",
                    "description": "Whether the outcome content should be hidden",
                    "example": false
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "ID of the outcome owner",
                    "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "priority",
                  "trend",
                  "analyticEvents",
                  "hideContent"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the outcome",
                          "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019"
                        },
                        "title": {
                          "type": "string",
                          "description": "Title of the outcome",
                          "example": "Increase User Engagement"
                        },
                        "description": {
                          "type": "string",
                          "description": "Detailed description of the outcome",
                          "example": "We aim to increase daily active users by 25% in Q3"
                        },
                        "priority": {
                          "type": "number",
                          "description": "Priority level of the outcome",
                          "example": 1
                        },
                        "trend": {
                          "type": "number",
                          "description": "Trend indicator for the outcome",
                          "example": 0
                        },
                        "analyticEvents": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of analytic events associated with the outcome",
                          "example": [
                            "user_signup",
                            "feature_usage"
                          ]
                        },
                        "hideContent": {
                          "type": "boolean",
                          "description": "Whether the outcome content should be hidden",
                          "example": false
                        },
                        "ownerId": {
                          "type": "string",
                          "description": "ID of the outcome owner",
                          "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation timestamp",
                          "example": "2025-02-09T17:35:46Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "description": "Last update timestamp",
                          "example": "2025-02-09T17:35:46Z"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "description",
                        "priority",
                        "trend",
                        "analyticEvents",
                        "hideContent",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Outcome data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single outcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List outcomes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the outcome",
                            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the outcome",
                            "example": "Increase User Engagement"
                          },
                          "description": {
                            "type": "string",
                            "description": "Detailed description of the outcome",
                            "example": "We aim to increase daily active users by 25% in Q3"
                          },
                          "priority": {
                            "type": "number",
                            "description": "Priority level of the outcome",
                            "example": 1
                          },
                          "trend": {
                            "type": "number",
                            "description": "Trend indicator for the outcome",
                            "example": 0
                          },
                          "analyticEvents": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of analytic events associated with the outcome",
                            "example": [
                              "user_signup",
                              "feature_usage"
                            ]
                          },
                          "hideContent": {
                            "type": "boolean",
                            "description": "Whether the outcome content should be hidden",
                            "example": false
                          },
                          "ownerId": {
                            "type": "string",
                            "description": "ID of the outcome owner",
                            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Creation timestamp",
                            "example": "2025-02-09T17:35:46Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "Last update timestamp",
                            "example": "2025-02-09T17:35:46Z"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "description",
                          "priority",
                          "trend",
                          "analyticEvents",
                          "hideContent",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "Array of outcomes"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing an array of outcomes"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/outcomes/{outcomeId}": {
      "get": {
        "summary": "Get an outcome by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "outcomeId",
            "required": true,
            "description": "Outcome ID",
            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OutcomeRelationshipsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the outcome",
                          "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019"
                        },
                        "title": {
                          "type": "string",
                          "description": "Title of the outcome",
                          "example": "Increase User Engagement"
                        },
                        "description": {
                          "type": "string",
                          "description": "Detailed description of the outcome",
                          "example": "We aim to increase daily active users by 25% in Q3"
                        },
                        "priority": {
                          "type": "number",
                          "description": "Priority level of the outcome",
                          "example": 1
                        },
                        "trend": {
                          "type": "number",
                          "description": "Trend indicator for the outcome",
                          "example": 0
                        },
                        "analyticEvents": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of analytic events associated with the outcome",
                          "example": [
                            "user_signup",
                            "feature_usage"
                          ]
                        },
                        "hideContent": {
                          "type": "boolean",
                          "description": "Whether the outcome content should be hidden",
                          "example": false
                        },
                        "ownerId": {
                          "type": "string",
                          "description": "ID of the outcome owner",
                          "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation timestamp",
                          "example": "2025-02-09T17:35:46Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "description": "Last update timestamp",
                          "example": "2025-02-09T17:35:46Z"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "description",
                        "priority",
                        "trend",
                        "analyticEvents",
                        "hideContent",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Outcome data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single outcome"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Outcome not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an outcome",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "outcomeId",
            "required": true,
            "description": "Outcome ID",
            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the outcome",
                    "example": "Increase User Engagement"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the outcome",
                    "example": "We aim to increase daily active users by 25% in Q3"
                  },
                  "priority": {
                    "type": "number",
                    "description": "Priority level of the outcome",
                    "example": 1
                  },
                  "trend": {
                    "type": "number",
                    "description": "Trend indicator for the outcome",
                    "example": 0
                  },
                  "analyticEvents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of analytic events associated with the outcome",
                    "example": [
                      "user_signup",
                      "feature_usage"
                    ]
                  },
                  "hideContent": {
                    "type": "boolean",
                    "description": "Whether the outcome content should be hidden",
                    "example": false
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "ID of the outcome owner",
                    "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "priority",
                  "trend",
                  "analyticEvents",
                  "hideContent"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the outcome",
                          "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019"
                        },
                        "title": {
                          "type": "string",
                          "description": "Title of the outcome",
                          "example": "Increase User Engagement"
                        },
                        "description": {
                          "type": "string",
                          "description": "Detailed description of the outcome",
                          "example": "We aim to increase daily active users by 25% in Q3"
                        },
                        "priority": {
                          "type": "number",
                          "description": "Priority level of the outcome",
                          "example": 1
                        },
                        "trend": {
                          "type": "number",
                          "description": "Trend indicator for the outcome",
                          "example": 0
                        },
                        "analyticEvents": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of analytic events associated with the outcome",
                          "example": [
                            "user_signup",
                            "feature_usage"
                          ]
                        },
                        "hideContent": {
                          "type": "boolean",
                          "description": "Whether the outcome content should be hidden",
                          "example": false
                        },
                        "ownerId": {
                          "type": "string",
                          "description": "ID of the outcome owner",
                          "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation timestamp",
                          "example": "2025-02-09T17:35:46Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "description": "Last update timestamp",
                          "example": "2025-02-09T17:35:46Z"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "description",
                        "priority",
                        "trend",
                        "analyticEvents",
                        "hideContent",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Outcome data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single outcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Outcome not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an outcome",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "outcomeId",
            "required": true,
            "description": "Outcome ID",
            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Outcome deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Success message data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a success message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Outcome not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/onboard": {
      "post": {
        "summary": "Create a new organization with workspace and outcomes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the organization to create",
                    "example": "Acme Corporation"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Description of the organization for generating workspace and outcomes",
                    "example": "A technology company focused on AI solutions for enterprise customers"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization, workspace, and outcomes created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the workspace",
                          "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the workspace",
                          "example": "Acme Corporation"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the workspace",
                          "example": "Main workspace for Acme Corporation"
                        },
                        "organisationId": {
                          "type": "string",
                          "description": "ID of the organization that owns this workspace",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "organisationId"
                      ]
                    },
                    "outcomes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the outcome",
                            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the outcome",
                            "example": "Increase User Engagement"
                          },
                          "description": {
                            "type": "string",
                            "description": "Detailed description of the outcome",
                            "example": "We aim to increase daily active users by 25% in Q3"
                          },
                          "workspaceId": {
                            "type": "string",
                            "description": "ID of the workspace this outcome belongs to",
                            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                          },
                          "organisationId": {
                            "type": "string",
                            "description": "ID of the organization that owns this outcome",
                            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "description",
                          "workspaceId",
                          "organisationId"
                        ]
                      }
                    },
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the organization",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the organization",
                          "example": "Acme Corporation"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "workspace",
                    "outcomes",
                    "organisation"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "409": {
            "description": "Organization name already exists"
          }
        }
      }
    },
    "/organisations/{orgId}/onboard": {
      "put": {
        "summary": "Update an existing organization, recreate workspace and outcomes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the organization to create",
                    "example": "Acme Corporation"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Description of the organization for generating workspace and outcomes",
                    "example": "A technology company focused on AI solutions for enterprise customers"
                  }
                },
                "required": [
                  "name",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated, workspace and outcomes recreated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspace": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the workspace",
                          "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the workspace",
                          "example": "Acme Corporation"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the workspace",
                          "example": "Main workspace for Acme Corporation"
                        },
                        "organisationId": {
                          "type": "string",
                          "description": "ID of the organization that owns this workspace",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "organisationId"
                      ]
                    },
                    "outcomes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the outcome",
                            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the outcome",
                            "example": "Increase User Engagement"
                          },
                          "description": {
                            "type": "string",
                            "description": "Detailed description of the outcome",
                            "example": "We aim to increase daily active users by 25% in Q3"
                          },
                          "workspaceId": {
                            "type": "string",
                            "description": "ID of the workspace this outcome belongs to",
                            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                          },
                          "organisationId": {
                            "type": "string",
                            "description": "ID of the organization that owns this outcome",
                            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "description",
                          "workspaceId",
                          "organisationId"
                        ]
                      }
                    },
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier for the organization",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the organization",
                          "example": "Acme Corporation"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "workspace",
                    "outcomes",
                    "organisation"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/feedback": {
      "post": {
        "summary": "Create new feedback",
        "description": "Creates a new feedback item in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Feedback",
                      "Bug",
                      "FeatureRequest"
                    ]
                  },
                  "source": {
                    "type": "string"
                  },
                  "feedback": {
                    "type": "string"
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "organisationId": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "seen": {
                    "type": "boolean"
                  },
                  "hideContent": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "type",
                  "source",
                  "feedback",
                  "organisationId",
                  "workspaceId"
                ],
                "description": "Request schema for creating feedback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Feedback",
                            "Bug",
                            "FeatureRequest"
                          ]
                        },
                        "source": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "feedback": {
                          "type": "string"
                        },
                        "seen": {
                          "type": "boolean"
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "organisationId": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "source",
                        "title",
                        "description",
                        "feedback",
                        "seen",
                        "hideContent",
                        "organisationId",
                        "workspaceId",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Feedback data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single feedback item"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List feedback",
        "description": "Lists all feedback in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Feedback",
                              "Bug",
                              "FeatureRequest"
                            ]
                          },
                          "source": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "feedback": {
                            "type": "string"
                          },
                          "seen": {
                            "type": "boolean"
                          },
                          "hideContent": {
                            "type": "boolean"
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "organisationId": {
                            "type": "string"
                          },
                          "workspaceId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "source",
                          "title",
                          "description",
                          "feedback",
                          "seen",
                          "hideContent",
                          "organisationId",
                          "workspaceId",
                          "createdAt",
                          "updatedAt"
                        ],
                        "description": "Feedback data from a user"
                      },
                      "description": "Array of feedback items"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing an array of feedback items"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/feedback/{feedbackId}": {
      "get": {
        "summary": "Get feedback by ID",
        "description": "Retrieves a specific feedback by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "feedbackId",
            "required": true,
            "description": "Feedback ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/FeedbackRelationshipsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Feedback",
                            "Bug",
                            "FeatureRequest"
                          ]
                        },
                        "source": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "feedback": {
                          "type": "string"
                        },
                        "seen": {
                          "type": "boolean"
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "organisationId": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "source",
                        "title",
                        "description",
                        "feedback",
                        "seen",
                        "hideContent",
                        "organisationId",
                        "workspaceId",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Feedback data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single feedback item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Feedback not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete feedback",
        "description": "Deletes a specific feedback by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "feedbackId",
            "required": true,
            "description": "Feedback ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Feedback deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Success message data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a success message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Feedback not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/mock-feedback": {
      "post": {
        "summary": "Generate mock feedback",
        "description": "Creates mock feedback data for testing and development purposes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mock feedback created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Feedback",
                            "Bug",
                            "FeatureRequest"
                          ]
                        },
                        "source": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "feedback": {
                          "type": "string"
                        },
                        "seen": {
                          "type": "boolean"
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "organisationId": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "source",
                        "title",
                        "description",
                        "feedback",
                        "seen",
                        "hideContent",
                        "organisationId",
                        "workspaceId",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Feedback data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single feedback item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/opportunities": {
      "post": {
        "summary": "Create new opportunity",
        "description": "Creates a new opportunity in the specified workspace",
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opportunity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "read": {
                          "type": "boolean"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "New",
                            "Solved",
                            "Planned",
                            "InProgress"
                          ]
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "solutionsGeneratingState": {
                          "type": "string",
                          "enum": [
                            "generating",
                            "generated",
                            "initial",
                            "error"
                          ]
                        },
                        "createdBy": {
                          "type": "string",
                          "enum": [
                            "user",
                            "generated"
                          ]
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "read",
                        "status",
                        "title",
                        "description",
                        "solutionsGeneratingState",
                        "createdBy",
                        "hideContent",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Opportunity data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single opportunity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Rate limit or entity limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "TOO_MANY_REQUESTS"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "Rate limit exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Too Many Requests - Rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List opportunities",
        "description": "Lists all opportunities in the specified workspace",
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "read": {
                            "type": "boolean"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "New",
                              "Solved",
                              "Planned",
                              "InProgress"
                            ]
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "solutionsGeneratingState": {
                            "type": "string",
                            "enum": [
                              "generating",
                              "generated",
                              "initial",
                              "error"
                            ]
                          },
                          "createdBy": {
                            "type": "string",
                            "enum": [
                              "user",
                              "generated"
                            ]
                          },
                          "hideContent": {
                            "type": "boolean"
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "read",
                          "status",
                          "title",
                          "description",
                          "solutionsGeneratingState",
                          "createdBy",
                          "hideContent",
                          "createdAt",
                          "updatedAt"
                        ],
                        "description": "Opportunity data for a business"
                      },
                      "description": "Array of opportunities"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing an array of opportunities"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/opportunities/{opportunityId}": {
      "get": {
        "summary": "Get opportunity by ID",
        "description": "Retrieves a specific opportunity by ID",
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunityId",
            "required": true,
            "description": "Opportunity ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/OpportunityRelationshipsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "read": {
                          "type": "boolean"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "New",
                            "Solved",
                            "Planned",
                            "InProgress"
                          ]
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "solutionsGeneratingState": {
                          "type": "string",
                          "enum": [
                            "generating",
                            "generated",
                            "initial",
                            "error"
                          ]
                        },
                        "createdBy": {
                          "type": "string",
                          "enum": [
                            "user",
                            "generated"
                          ]
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "read",
                        "status",
                        "title",
                        "description",
                        "solutionsGeneratingState",
                        "createdBy",
                        "hideContent",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Opportunity data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single opportunity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update opportunity",
        "description": "Updates a specific opportunity by ID",
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunityId",
            "required": true,
            "description": "Opportunity ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOpportunityPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opportunity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "read": {
                          "type": "boolean"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "New",
                            "Solved",
                            "Planned",
                            "InProgress"
                          ]
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "solutionsGeneratingState": {
                          "type": "string",
                          "enum": [
                            "generating",
                            "generated",
                            "initial",
                            "error"
                          ]
                        },
                        "createdBy": {
                          "type": "string",
                          "enum": [
                            "user",
                            "generated"
                          ]
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "read",
                        "status",
                        "title",
                        "description",
                        "solutionsGeneratingState",
                        "createdBy",
                        "hideContent",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Opportunity data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single opportunity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete opportunity",
        "description": "Deletes a specific opportunity by ID",
        "security": [
          {
            "bearerAuth": [],
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunityId",
            "required": true,
            "description": "Opportunity ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Opportunity deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Success message data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a success message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Opportunity not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/requirements": {
      "post": {
        "summary": "Create new requirement",
        "description": "Creates a new requirement in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "feature": {
                    "type": "string"
                  },
                  "requirements": {
                    "type": "string"
                  },
                  "hideContent": {
                    "type": "boolean"
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "ready",
                      "complete"
                    ]
                  },
                  "generatedBy": {
                    "type": "string"
                  },
                  "generatedFrom": {
                    "type": "string"
                  },
                  "modelName": {
                    "type": "string"
                  },
                  "modelProvider": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "feature",
                  "requirements"
                ],
                "description": "Request schema for creating a requirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requirement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "nullable": true
                        },
                        "aiProcessingState": {
                          "type": "string",
                          "enum": [
                            "INITIAL",
                            "PROCESSING",
                            "FINISHED",
                            "ERROR"
                          ]
                        },
                        "refinementLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "role",
                              "content"
                            ]
                          }
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "feature": {
                          "type": "string"
                        },
                        "requirements": {
                          "type": "string"
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "draft",
                            "ready",
                            "complete"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "systemPrompt",
                        "aiProcessingState",
                        "refinementLog",
                        "title",
                        "description",
                        "feature",
                        "requirements",
                        "hideContent",
                        "createdAt",
                        "updatedAt",
                        "status"
                      ],
                      "description": "Requirement data for a product or feature"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      },
      "get": {
        "summary": "List requirements",
        "description": "Lists all requirements in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "systemPrompt": {
                            "type": "string",
                            "nullable": true
                          },
                          "aiProcessingState": {
                            "type": "string",
                            "enum": [
                              "INITIAL",
                              "PROCESSING",
                              "FINISHED",
                              "ERROR"
                            ]
                          },
                          "refinementLog": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "assistant"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "role",
                                "content"
                              ]
                            }
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "feature": {
                            "type": "string"
                          },
                          "requirements": {
                            "type": "string"
                          },
                          "hideContent": {
                            "type": "boolean"
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "ready",
                              "complete"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "systemPrompt",
                          "aiProcessingState",
                          "refinementLog",
                          "title",
                          "description",
                          "feature",
                          "requirements",
                          "hideContent",
                          "createdAt",
                          "updatedAt",
                          "status"
                        ],
                        "description": "Requirement data for a product or feature"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/requirements/{requirementId}": {
      "get": {
        "summary": "Get requirement by ID",
        "description": "Retrieves a specific requirement by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "requirementId",
            "required": true,
            "description": "Requirement ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/RequirementRelationshipsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "nullable": true
                        },
                        "aiProcessingState": {
                          "type": "string",
                          "enum": [
                            "INITIAL",
                            "PROCESSING",
                            "FINISHED",
                            "ERROR"
                          ]
                        },
                        "refinementLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "role",
                              "content"
                            ]
                          }
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "feature": {
                          "type": "string"
                        },
                        "requirements": {
                          "type": "string"
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "draft",
                            "ready",
                            "complete"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "systemPrompt",
                        "aiProcessingState",
                        "refinementLog",
                        "title",
                        "description",
                        "feature",
                        "requirements",
                        "hideContent",
                        "createdAt",
                        "updatedAt",
                        "status"
                      ],
                      "description": "Requirement data for a product or feature"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Requirement not found"
          }
        }
      },
      "put": {
        "summary": "Update requirement",
        "description": "Updates a specific requirement by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "requirementId",
            "required": true,
            "description": "Requirement ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "feature": {
                    "type": "string"
                  },
                  "requirements": {
                    "type": "string"
                  },
                  "hideContent": {
                    "type": "boolean"
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "ready",
                      "complete"
                    ]
                  },
                  "generatedBy": {
                    "type": "string"
                  },
                  "generatedFrom": {
                    "type": "string"
                  },
                  "modelName": {
                    "type": "string"
                  },
                  "modelProvider": {
                    "type": "string"
                  }
                },
                "description": "Request schema for updating a requirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requirement updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "nullable": true
                        },
                        "aiProcessingState": {
                          "type": "string",
                          "enum": [
                            "INITIAL",
                            "PROCESSING",
                            "FINISHED",
                            "ERROR"
                          ]
                        },
                        "refinementLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "role",
                              "content"
                            ]
                          }
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "feature": {
                          "type": "string"
                        },
                        "requirements": {
                          "type": "string"
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "draft",
                            "ready",
                            "complete"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "systemPrompt",
                        "aiProcessingState",
                        "refinementLog",
                        "title",
                        "description",
                        "feature",
                        "requirements",
                        "hideContent",
                        "createdAt",
                        "updatedAt",
                        "status"
                      ],
                      "description": "Requirement data for a product or feature"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Requirement not found"
          }
        }
      },
      "delete": {
        "summary": "Delete requirement",
        "description": "Deletes a specific requirement by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "requirementId",
            "required": true,
            "description": "Requirement ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requirement deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Requirement deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Requirement not found"
          }
        }
      }
    },
    "/v1/requirements/ready": {
      "get": {
        "summary": "Get all ready requirements",
        "description": "Retrieves all requirements that are ready to be worked on.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "systemPrompt": {
                            "type": "string",
                            "nullable": true
                          },
                          "aiProcessingState": {
                            "type": "string",
                            "enum": [
                              "INITIAL",
                              "PROCESSING",
                              "FINISHED",
                              "ERROR"
                            ]
                          },
                          "refinementLog": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "assistant"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "role",
                                "content"
                              ]
                            }
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "feature": {
                            "type": "string"
                          },
                          "requirements": {
                            "type": "string"
                          },
                          "hideContent": {
                            "type": "boolean"
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "ready",
                              "complete"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "systemPrompt",
                          "aiProcessingState",
                          "refinementLog",
                          "title",
                          "description",
                          "feature",
                          "requirements",
                          "hideContent",
                          "createdAt",
                          "updatedAt",
                          "status"
                        ],
                        "description": "Requirement data for a product or feature"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Requirement not found"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/solutions": {
      "post": {
        "summary": "Create new solution",
        "description": "Creates a new solution in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "New",
                      "Solved",
                      "Planned",
                      "InProgress"
                    ]
                  },
                  "pros": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "cons": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hideContent": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "string",
                    "enum": [
                      "user",
                      "generated"
                    ]
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string",
                    "nullable": true
                  },
                  "aiProcessingState": {
                    "type": "string",
                    "enum": [
                      "INITIAL",
                      "PROCESSING",
                      "FINISHED",
                      "ERROR"
                    ]
                  },
                  "refinementLog": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "user",
                            "assistant"
                          ]
                        },
                        "content": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "role",
                        "content"
                      ]
                    }
                  }
                },
                "required": [
                  "title",
                  "description",
                  "pros",
                  "cons"
                ],
                "description": "Request schema for creating a solution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Solution created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "nullable": true
                        },
                        "aiProcessingState": {
                          "type": "string",
                          "enum": [
                            "INITIAL",
                            "PROCESSING",
                            "FINISHED",
                            "ERROR"
                          ]
                        },
                        "refinementLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "role",
                              "content"
                            ]
                          }
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "New",
                            "Solved",
                            "Planned",
                            "InProgress"
                          ]
                        },
                        "pros": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cons": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "createdBy": {
                          "type": "string",
                          "enum": [
                            "user",
                            "generated"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "systemPrompt",
                        "aiProcessingState",
                        "refinementLog",
                        "title",
                        "description",
                        "status",
                        "pros",
                        "cons",
                        "hideContent",
                        "createdBy",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Solution data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single solution"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      },
      "get": {
        "summary": "List solutions",
        "description": "Lists all solutions in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "systemPrompt": {
                            "type": "string",
                            "nullable": true
                          },
                          "aiProcessingState": {
                            "type": "string",
                            "enum": [
                              "INITIAL",
                              "PROCESSING",
                              "FINISHED",
                              "ERROR"
                            ]
                          },
                          "refinementLog": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "assistant"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "role",
                                "content"
                              ]
                            }
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "New",
                              "Solved",
                              "Planned",
                              "InProgress"
                            ]
                          },
                          "pros": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "cons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "hideContent": {
                            "type": "boolean"
                          },
                          "createdBy": {
                            "type": "string",
                            "enum": [
                              "user",
                              "generated"
                            ]
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "systemPrompt",
                          "aiProcessingState",
                          "refinementLog",
                          "title",
                          "description",
                          "status",
                          "pros",
                          "cons",
                          "hideContent",
                          "createdBy",
                          "createdAt",
                          "updatedAt"
                        ],
                        "description": "Solution data for an opportunity"
                      },
                      "description": "Array of solutions"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing an array of solutions"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/solutions/{solutionId}": {
      "get": {
        "summary": "Get solution by ID",
        "description": "Retrieves a specific solution by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "solutionId",
            "required": true,
            "description": "Solution ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SolutionRelationshipsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "nullable": true
                        },
                        "aiProcessingState": {
                          "type": "string",
                          "enum": [
                            "INITIAL",
                            "PROCESSING",
                            "FINISHED",
                            "ERROR"
                          ]
                        },
                        "refinementLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "role",
                              "content"
                            ]
                          }
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "New",
                            "Solved",
                            "Planned",
                            "InProgress"
                          ]
                        },
                        "pros": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cons": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "createdBy": {
                          "type": "string",
                          "enum": [
                            "user",
                            "generated"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "systemPrompt",
                        "aiProcessingState",
                        "refinementLog",
                        "title",
                        "description",
                        "status",
                        "pros",
                        "cons",
                        "hideContent",
                        "createdBy",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Solution data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single solution"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Solution not found"
          }
        }
      },
      "put": {
        "summary": "Update solution",
        "description": "Updates a specific solution by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "solutionId",
            "required": true,
            "description": "Solution ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "New",
                      "Solved",
                      "Planned",
                      "InProgress"
                    ]
                  },
                  "pros": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "cons": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hideContent": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "string",
                    "enum": [
                      "user",
                      "generated"
                    ]
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "systemPrompt": {
                    "type": "string",
                    "nullable": true
                  },
                  "aiProcessingState": {
                    "type": "string",
                    "enum": [
                      "INITIAL",
                      "PROCESSING",
                      "FINISHED",
                      "ERROR"
                    ]
                  },
                  "refinementLog": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "user",
                            "assistant"
                          ]
                        },
                        "content": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "role",
                        "content"
                      ]
                    }
                  }
                },
                "description": "Request schema for updating a solution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Solution updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "systemPrompt": {
                          "type": "string",
                          "nullable": true
                        },
                        "aiProcessingState": {
                          "type": "string",
                          "enum": [
                            "INITIAL",
                            "PROCESSING",
                            "FINISHED",
                            "ERROR"
                          ]
                        },
                        "refinementLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "assistant"
                                ]
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "role",
                              "content"
                            ]
                          }
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "New",
                            "Solved",
                            "Planned",
                            "InProgress"
                          ]
                        },
                        "pros": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cons": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hideContent": {
                          "type": "boolean"
                        },
                        "createdBy": {
                          "type": "string",
                          "enum": [
                            "user",
                            "generated"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "systemPrompt",
                        "aiProcessingState",
                        "refinementLog",
                        "title",
                        "description",
                        "status",
                        "pros",
                        "cons",
                        "hideContent",
                        "createdBy",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Solution data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single solution"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Solution not found"
          }
        }
      },
      "delete": {
        "summary": "Delete solution",
        "description": "Deletes a specific solution by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "solutionId",
            "required": true,
            "description": "Solution ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Solution deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Success message data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a success message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Solution not found"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/topics": {
      "post": {
        "summary": "Create new topic",
        "description": "Creates a new topic in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description"
                ],
                "description": "Request schema for creating a topic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Topic created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "description",
                    "createdAt",
                    "updatedAt"
                  ],
                  "description": "Topic data for organizing feedback"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      },
      "get": {
        "summary": "List topics",
        "description": "Lists all topics in the specified workspace",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "title",
                      "description",
                      "createdAt",
                      "updatedAt"
                    ],
                    "description": "Topic data for organizing feedback"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/topics/{topicId}": {
      "get": {
        "summary": "Get topic by ID",
        "description": "Retrieves a specific topic by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "topicId",
            "required": true,
            "description": "Topic ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "description",
                    "createdAt",
                    "updatedAt"
                  ],
                  "description": "Topic data for organizing feedback"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Topic not found"
          }
        }
      },
      "put": {
        "summary": "Update topic",
        "description": "Updates a specific topic by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "topicId",
            "required": true,
            "description": "Topic ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "description": "Request schema for updating a topic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Topic updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "description",
                    "createdAt",
                    "updatedAt"
                  ],
                  "description": "Topic data for organizing feedback"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Topic not found"
          }
        }
      },
      "delete": {
        "summary": "Delete topic",
        "description": "Deletes a specific topic by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "topicId",
            "required": true,
            "description": "Topic ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Topic deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message",
                      "example": "Topic deleted successfully"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Topic not found"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces": {
      "post": {
        "summary": "Create new workspace",
        "description": "Creates a new workspace for the specified organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "missionStatement": {
                    "type": "string"
                  },
                  "homepageUrl": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "outcomes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "missionStatement"
                ],
                "description": "Request schema for creating a workspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workspace created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "outcomes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "homepageUrl": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "missionStatement": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "outcomes",
                        "name",
                        "missionStatement",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Workspace data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single workspace"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List workspaces",
        "description": "Lists all workspaces for the specified organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "outcomes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "homepageUrl": {
                            "type": "string"
                          },
                          "logoUrl": {
                            "type": "string"
                          },
                          "missionStatement": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "outcomes",
                          "name",
                          "missionStatement",
                          "createdAt",
                          "updatedAt"
                        ],
                        "description": "Workspace data"
                      },
                      "description": "Array of workspaces"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing an array of workspaces"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}": {
      "get": {
        "summary": "Get workspace by ID",
        "description": "Retrieves a specific workspace by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "outcomes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "homepageUrl": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "missionStatement": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "outcomes",
                        "name",
                        "missionStatement",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Workspace data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single workspace"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update workspace",
        "description": "Updates a specific workspace by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "missionStatement": {
                    "type": "string"
                  },
                  "homepageUrl": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "outcomes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request schema for updating a workspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workspace updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "outcomes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "homepageUrl": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "missionStatement": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "outcomes",
                        "name",
                        "missionStatement",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Workspace data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single workspace"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete workspace",
        "description": "Deletes a specific workspace by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Workspace deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Success message data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a success message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations": {
      "post": {
        "summary": "Create new organisation",
        "description": "Creates a new organisation",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "stripeCustomerId": {
                    "type": "string"
                  },
                  "maxDailyTokens": {
                    "type": "number"
                  },
                  "maxEntities": {
                    "type": "number"
                  },
                  "entitiesCreatedCount": {
                    "type": "number"
                  },
                  "homepageUrl": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "outcomeIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "description": "Request schema for creating an organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organisation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "stripeCustomerId": {
                          "type": "string"
                        },
                        "maxDailyTokens": {
                          "type": "number"
                        },
                        "maxEntities": {
                          "type": "number"
                        },
                        "entitiesCreatedCount": {
                          "type": "number"
                        },
                        "homepageUrl": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "outcomeIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "stripeCustomerId",
                        "maxDailyTokens",
                        "maxEntities",
                        "entitiesCreatedCount",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Organisation data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single organisation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List organisations",
        "description": "Lists all organisations accessible to the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "stripeCustomerId": {
                            "type": "string"
                          },
                          "maxDailyTokens": {
                            "type": "number"
                          },
                          "maxEntities": {
                            "type": "number"
                          },
                          "entitiesCreatedCount": {
                            "type": "number"
                          },
                          "homepageUrl": {
                            "type": "string"
                          },
                          "logoUrl": {
                            "type": "string"
                          },
                          "outcomeIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "stripeCustomerId",
                          "maxDailyTokens",
                          "maxEntities",
                          "entitiesCreatedCount",
                          "createdAt",
                          "updatedAt"
                        ],
                        "description": "Organisation data"
                      },
                      "description": "Array of organisations"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing an array of organisations"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{orgId}": {
      "get": {
        "summary": "Get organisation by ID",
        "description": "Retrieves a specific organisation by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "stripeCustomerId": {
                          "type": "string"
                        },
                        "maxDailyTokens": {
                          "type": "number"
                        },
                        "maxEntities": {
                          "type": "number"
                        },
                        "entitiesCreatedCount": {
                          "type": "number"
                        },
                        "homepageUrl": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "outcomeIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "stripeCustomerId",
                        "maxDailyTokens",
                        "maxEntities",
                        "entitiesCreatedCount",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Organisation data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single organisation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Organisation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update organisation",
        "description": "Updates a specific organisation by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "stripeCustomerId": {
                    "type": "string"
                  },
                  "maxDailyTokens": {
                    "type": "number"
                  },
                  "maxEntities": {
                    "type": "number"
                  },
                  "entitiesCreatedCount": {
                    "type": "number"
                  },
                  "homepageUrl": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "outcomeIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request schema for updating an organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organisation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "stripeCustomerId": {
                          "type": "string"
                        },
                        "maxDailyTokens": {
                          "type": "number"
                        },
                        "maxEntities": {
                          "type": "number"
                        },
                        "entitiesCreatedCount": {
                          "type": "number"
                        },
                        "homepageUrl": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "outcomeIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "stripeCustomerId",
                        "maxDailyTokens",
                        "maxEntities",
                        "entitiesCreatedCount",
                        "createdAt",
                        "updatedAt"
                      ],
                      "description": "Organisation data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a single organisation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INVALID_REQUEST"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "One or more fields are invalid"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of field names that are missing or invalid",
                          "example": [
                            "title",
                            "description"
                          ]
                        },
                        "validationErrors": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Detailed validation error information for each invalid field",
                          "example": {
                            "invalidFields": {
                              "title": {
                                "type": "too_small",
                                "message": "Title must be at least 3 characters long",
                                "path": [
                                  "title"
                                ]
                              },
                              "deadline": {
                                "type": "invalid_date",
                                "message": "Deadline must be a valid date in the future",
                                "path": [
                                  "deadline"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Bad Request - Invalid input parameters or missing required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Organisation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete organisation",
        "description": "Deletes a specific organisation by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message",
                          "example": "Organisation deleted successfully"
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Success message data"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Response containing a success message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthenticated"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Unauthorized - Missing or invalid authentication token"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "UNAUTHORISED_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "User is unauthorised"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Forbidden - Insufficient permissions to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Organisation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "NOT_FOUND"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "The requested resource was not found"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Not Found - The requested resource does not exist"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Error code identifier",
                          "example": "INTERNAL_SERVER_ERROR"
                        },
                        "description": {
                          "type": "string",
                          "description": "Human-readable error description",
                          "example": "An unexpected error occurred on the server"
                        }
                      },
                      "required": [
                        "code",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Server Error - An unexpected error occurred on the server"
                }
              }
            }
          }
        }
      }
    },
    "/v1/whoami": {
      "get": {
        "summary": "Retrieve authenticated user's organization and workspace information",
        "description": "Returns the ID and name of the authenticated user's organization and workspace. This is only callable by an API key which is workspace scoped.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "organisation": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Organization ID",
                              "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                            },
                            "name": {
                              "type": "string",
                              "description": "Organization name",
                              "example": "Acme Corporation"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        },
                        "workspace": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Workspace ID",
                              "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                            },
                            "name": {
                              "type": "string",
                              "description": "Workspace name",
                              "example": "Product Development"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "organisation",
                        "workspace"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "User organization and workspace information"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/data-ingress": {
      "post": {
        "summary": "Process feedback for a workspace",
        "description": "Receives feedback data and processes it for a specific workspace and organization",
        "tags": [
          "Data Ingress"
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "description": "Raw feedback content",
                "example": "I found the dashboard confusing to navigate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "feedback": {
                          "type": "string",
                          "description": "The feedback content",
                          "example": "I had trouble with the checkout process on your website"
                        },
                        "source": {
                          "type": "string",
                          "enum": [
                            "TYPEFORM",
                            "SLACK",
                            "UNKNOWN",
                            "MANUAL"
                          ],
                          "description": "The source of the feedback",
                          "example": "SLACK"
                        },
                        "workspaceId": {
                          "type": "string",
                          "description": "ID of the workspace",
                          "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                        },
                        "organisationId": {
                          "type": "string",
                          "description": "ID of the organization",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        }
                      },
                      "required": [
                        "feedback",
                        "source",
                        "workspaceId",
                        "organisationId"
                      ],
                      "description": "Response data for processed feedback"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., missing body or invalid parameters)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/data-ingress/{feedbackSource}": {
      "post": {
        "summary": "Process feedback for a workspace",
        "description": "Receives feedback data and processes it for a specific workspace and organization",
        "tags": [
          "Data Ingress"
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "feedbackSource",
            "required": true,
            "description": "The source of the feedback",
            "example": "typeform",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "description": "Raw feedback content",
                "example": "I found the dashboard confusing to navigate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "feedback": {
                          "type": "string",
                          "description": "The feedback content",
                          "example": "I had trouble with the checkout process on your website"
                        },
                        "source": {
                          "type": "string",
                          "enum": [
                            "TYPEFORM",
                            "SLACK",
                            "UNKNOWN",
                            "MANUAL"
                          ],
                          "description": "The source of the feedback",
                          "example": "SLACK"
                        },
                        "workspaceId": {
                          "type": "string",
                          "description": "ID of the workspace",
                          "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                        },
                        "organisationId": {
                          "type": "string",
                          "description": "ID of the organization",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        }
                      },
                      "required": [
                        "feedback",
                        "source",
                        "workspaceId",
                        "organisationId"
                      ],
                      "description": "Response data for processed feedback"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., missing body or invalid parameters)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/data-ingress": {
      "post": {
        "summary": "Process feedback for a workspace",
        "description": "Receives feedback data and processes it for a specific workspace and organization",
        "tags": [
          "Data Ingress"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "description": "Raw feedback content",
                "example": "I found the dashboard confusing to navigate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "feedback": {
                          "type": "string",
                          "description": "The feedback content",
                          "example": "I had trouble with the checkout process on your website"
                        },
                        "source": {
                          "type": "string",
                          "enum": [
                            "TYPEFORM",
                            "SLACK",
                            "UNKNOWN",
                            "MANUAL"
                          ],
                          "description": "The source of the feedback",
                          "example": "SLACK"
                        },
                        "workspaceId": {
                          "type": "string",
                          "description": "ID of the workspace",
                          "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                        },
                        "organisationId": {
                          "type": "string",
                          "description": "ID of the organization",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        }
                      },
                      "required": [
                        "feedback",
                        "source",
                        "workspaceId",
                        "organisationId"
                      ],
                      "description": "Response data for processed feedback"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., missing body or invalid parameters)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/data-ingress/{feedbackSource}": {
      "post": {
        "summary": "Process feedback for a workspace",
        "description": "Receives feedback data and processes it for a specific workspace and organization",
        "tags": [
          "Data Ingress"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "feedbackSource",
            "required": true,
            "description": "The source of the feedback",
            "example": "typeform",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "description": "Raw feedback content",
                "example": "I found the dashboard confusing to navigate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "feedback": {
                          "type": "string",
                          "description": "The feedback content",
                          "example": "I had trouble with the checkout process on your website"
                        },
                        "source": {
                          "type": "string",
                          "enum": [
                            "TYPEFORM",
                            "SLACK",
                            "UNKNOWN",
                            "MANUAL"
                          ],
                          "description": "The source of the feedback",
                          "example": "SLACK"
                        },
                        "workspaceId": {
                          "type": "string",
                          "description": "ID of the workspace",
                          "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f"
                        },
                        "organisationId": {
                          "type": "string",
                          "description": "ID of the organization",
                          "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184"
                        }
                      },
                      "required": [
                        "feedback",
                        "source",
                        "workspaceId",
                        "organisationId"
                      ],
                      "description": "Response data for processed feedback"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., missing body or invalid parameters)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/feedback-document": {
      "post": {
        "summary": "Upload feedback document",
        "description": "Uploads a document related to feedback for processing and analysis",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The document file to upload"
                  },
                  "feedbackId": {
                    "type": "string",
                    "description": "ID of the feedback to associate this document with",
                    "example": "fb_123"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title for the document",
                    "example": "Customer Feedback Report"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the document",
                    "example": "Quarterly customer feedback report from interviews"
                  }
                },
                "description": "Feedback document upload request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Generated document ID",
                      "example": "doc_123"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to access the document",
                      "example": "https://example.com/documents/doc_123"
                    },
                    "feedbackId": {
                      "type": "string",
                      "description": "Associated feedback ID",
                      "example": "fb_123"
                    },
                    "fileName": {
                      "type": "string",
                      "description": "Name of the uploaded file",
                      "example": "report.pdf"
                    }
                  },
                  "required": [
                    "id",
                    "url",
                    "fileName"
                  ],
                  "description": "Uploaded document information"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "413": {
            "description": "Payload Too Large - File size exceeds limits"
          },
          "415": {
            "description": "Unsupported Media Type - File format not supported"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/opportunities/{opportunityId}/generate-solutions": {
      "post": {
        "summary": "Generate solutions for an opportunity",
        "description": "Asynchronously generates AI-powered solutions based on the feedback associated with an opportunity",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunityId",
            "required": true,
            "description": "Opportunity ID",
            "example": "opp_12345",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxSolutions": {
                    "type": "number",
                    "description": "Maximum number of solutions to generate",
                    "example": 3
                  },
                  "regenerate": {
                    "type": "boolean",
                    "description": "Whether to regenerate existing solutions",
                    "example": false
                  }
                },
                "description": "Request parameters for solution generation"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Solution generation process accepted and started asynchronously"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Opportunity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/knowledge-base-documents": {
      "get": {
        "summary": "List knowledge base documents",
        "description": "Retrieves a list of all knowledge base documents in the workspace",
        "tags": [
          "Knowledge Base"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fileName": {
                            "type": "string",
                            "description": "Name of the document file",
                            "example": "product_requirements.pdf"
                          },
                          "fileSize": {
                            "type": "number",
                            "description": "Size of the document in bytes",
                            "example": 256000
                          },
                          "mimeType": {
                            "type": "string",
                            "description": "MIME type of the document",
                            "example": "application/pdf"
                          },
                          "uploadDate": {
                            "type": "string",
                            "description": "Date and time when the document was uploaded",
                            "example": "2023-05-15T10:30:00Z"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "processing",
                              "ready",
                              "error"
                            ],
                            "description": "Processing status of the document",
                            "example": "ready"
                          },
                          "url": {
                            "type": "string",
                            "description": "URL to access the document if available",
                            "example": "https://example.com/documents/product_requirements.pdf"
                          }
                        },
                        "required": [
                          "fileName",
                          "fileSize",
                          "mimeType",
                          "uploadDate",
                          "status"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "List of knowledge base documents"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Upload knowledge base document",
        "description": "Uploads a new document to the knowledge base",
        "tags": [
          "Knowledge Base"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string",
                    "description": "Name of the document file",
                    "example": "product_requirements.pdf"
                  },
                  "fileContent": {
                    "type": "string",
                    "description": "Base64 encoded content of the file",
                    "example": "JVBERi0xLjMKJcTl8uXrp/Og0..."
                  },
                  "mimeType": {
                    "type": "string",
                    "description": "MIME type of the document",
                    "example": "application/pdf"
                  }
                },
                "required": [
                  "fileName",
                  "fileContent",
                  "mimeType"
                ],
                "description": "Knowledge base document upload request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document successfully uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "type": "string",
                          "description": "Name of the document file",
                          "example": "product_requirements.pdf"
                        },
                        "fileSize": {
                          "type": "number",
                          "description": "Size of the document in bytes",
                          "example": 256000
                        },
                        "mimeType": {
                          "type": "string",
                          "description": "MIME type of the document",
                          "example": "application/pdf"
                        },
                        "uploadDate": {
                          "type": "string",
                          "description": "Date and time when the document was uploaded",
                          "example": "2023-05-15T10:30:00Z"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "processing",
                            "ready",
                            "error"
                          ],
                          "description": "Processing status of the document",
                          "example": "ready"
                        },
                        "url": {
                          "type": "string",
                          "description": "URL to access the document if available",
                          "example": "https://example.com/documents/product_requirements.pdf"
                        }
                      },
                      "required": [
                        "fileName",
                        "fileSize",
                        "mimeType",
                        "uploadDate",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Uploaded document information"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input parameters or file format"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "413": {
            "description": "Payload too large - file exceeds size limit"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/knowledge-base-documents/{fileName}": {
      "delete": {
        "summary": "Delete knowledge base document",
        "description": "Deletes a document from the knowledge base",
        "tags": [
          "Knowledge Base"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "fileName",
            "required": true,
            "description": "Name of the document file",
            "example": "product_requirements.pdf",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Document successfully deleted"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Document not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/opportunities/{opportunityId}/feedback/mark-all-seen": {
      "post": {
        "summary": "Mark all opportunity feedback as seen",
        "description": "Marks all feedback items associated with an opportunity as having been seen by the user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunityId",
            "required": true,
            "description": "Opportunity ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All feedback items successfully marked as seen"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Opportunity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/opportunities/{opportunityId}/relationships/{action}": {
      "post": {
        "operationId": "manageOpportunityRelationships",
        "summary": "Manage opportunity relationships",
        "description": "Add or remove relationships between an opportunity and other entities (solutions, outcomes, or feedback)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "opportunityId",
            "required": true,
            "description": "Opportunity ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "description": "Action to perform on relationships",
            "example": "add",
            "schema": {
              "$ref": "#/components/schemas/RelationshipAction"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "solutionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of solution IDs to associate with the opportunity",
                    "example": [
                      "a1b2c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d"
                    ]
                  },
                  "outcomeIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of outcome IDs to associate with the opportunity",
                    "example": [
                      "f6e5d4c3-b2a1-4b5a-9c8d-1e0f2a3b4c5d"
                    ]
                  },
                  "feedbackIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of feedback IDs to associate with the opportunity",
                    "example": [
                      "c5d4e3f2-a1b2-4c5d-8e9f-0a1b2c3d4e5f"
                    ]
                  }
                },
                "description": "Request body for managing opportunity relationships"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Relationships successfully modified"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/status": {
      "get": {
        "summary": "Get organization status",
        "description": "Retrieves the current status and statistics of an organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Organization ID",
                      "example": "org_12345"
                    },
                    "name": {
                      "type": "string",
                      "description": "Organization name",
                      "example": "Acme Inc."
                    },
                    "status": {
                      "type": "string",
                      "description": "Current organization status",
                      "example": "active"
                    },
                    "metrics": {
                      "type": "object",
                      "properties": {
                        "feedbackCount": {
                          "type": "number",
                          "description": "Total number of feedback items",
                          "example": 125
                        },
                        "opportunityCount": {
                          "type": "number",
                          "description": "Total number of opportunities",
                          "example": 27
                        },
                        "solutionCount": {
                          "type": "number",
                          "description": "Total number of solutions",
                          "example": 48
                        },
                        "outcomeCount": {
                          "type": "number",
                          "description": "Total number of outcomes",
                          "example": 15
                        }
                      },
                      "required": [
                        "feedbackCount",
                        "opportunityCount",
                        "solutionCount",
                        "outcomeCount"
                      ],
                      "description": "Organization metrics and statistics"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "status",
                    "metrics"
                  ],
                  "description": "Organization status response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Organization not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/outcomes/{outcomeId}/relationships/{action}": {
      "post": {
        "operationId": "manageOutcomeRelationships",
        "summary": "Manage outcome relationships",
        "description": "Add or remove relationships between an outcome and other entities (opportunities, solutions, or feedback)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "outcomeId",
            "required": true,
            "description": "Outcome ID",
            "example": "7b9e5d2c-f314-48a9-be56-9843a2f6c019",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "description": "Action to perform on relationships",
            "example": "add",
            "schema": {
              "$ref": "#/components/schemas/RelationshipAction"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutcomeRelationshipsPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Relationships successfully modified"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/requirements/{requirementId}/relationships/{action}": {
      "post": {
        "operationId": "manageRequirementRelationships",
        "summary": "Manage requirement relationships",
        "description": "Add or remove relationships between a requirement and other entities (opportunities, solutions, outcomes, or feedback)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "requirementId",
            "required": true,
            "description": "Requirement ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "description": "Action to perform on relationships",
            "example": "add",
            "schema": {
              "$ref": "#/components/schemas/RelationshipAction"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequirementRelationshipsPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Relationships successfully modified"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/solutions/{solutionId}/relationships/{action}": {
      "post": {
        "operationId": "manageSolutionRelationships",
        "summary": "Manage solution relationships",
        "description": "Add or remove relationships between a solution and other entities (opportunities, outcomes, or feedback)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "solutionId",
            "required": true,
            "description": "Solution ID",
            "example": "d4e71c2b-a498-42af-b7f5-69de06a0d7c4",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "description": "Action to perform on relationships",
            "example": "add",
            "schema": {
              "$ref": "#/components/schemas/RelationshipAction"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionRelationshipsPayload"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Relationships successfully modified"
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/organisations/{orgId}/workspaces/{workspaceId}/test-proxy": {
      "post": {
        "summary": "Process text through AI proxy",
        "description": "Processes a text prompt through an AI model and returns the result",
        "tags": [
          "Knowledge Base"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgId",
            "required": true,
            "description": "Organization ID",
            "example": "a5f3c6e1-9d20-4f7b-8e31-d09a2b63c184",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "description": "Workspace ID",
            "example": "c0e195d9-b918-4a3a-bd8b-f730361d044f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "Text prompt to process",
                    "example": "Analyze customer feedback regarding our mobile app"
                  },
                  "model": {
                    "type": "string",
                    "description": "AI model to use for processing",
                    "example": "gpt-4"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "temperature": {
                        "type": "number",
                        "description": "Temperature parameter for the model",
                        "example": 0.7
                      },
                      "maxTokens": {
                        "type": "number",
                        "description": "Maximum number of tokens in the response",
                        "example": 500
                      }
                    }
                  }
                },
                "required": [
                  "prompt"
                ],
                "description": "Request body for text proxy processing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully processed text",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "Processed text result",
                          "example": "Based on the customer feedback analysis..."
                        },
                        "model": {
                          "type": "string",
                          "description": "AI model used for processing",
                          "example": "gpt-4"
                        },
                        "processingTime": {
                          "type": "number",
                          "description": "Time taken to process the request in milliseconds",
                          "example": 1250
                        }
                      },
                      "required": [
                        "result",
                        "model",
                        "processingTime"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Text proxy processing result"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT authentication for organization-scoped endpoints."
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication for public API endpoints. This key is scoped by workspace so a unique key is required per workspace within an organisation."
      }
    },
    "schemas": {
      "CreateOpportunityPayload": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Solved",
              "Planned",
              "InProgress"
            ]
          },
          "solutionsGeneratingState": {
            "type": "string",
            "enum": [
              "generating",
              "generated",
              "initial",
              "error"
            ]
          },
          "createdBy": {
            "type": "string",
            "enum": [
              "user",
              "generated"
            ]
          },
          "hideContent": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description",
          "status"
        ],
        "description": "Request schema for creating an opportunity"
      },
      "UpdateOpportunityPayload": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Solved",
              "Planned",
              "InProgress"
            ]
          },
          "solutionsGeneratingState": {
            "type": "string",
            "enum": [
              "generating",
              "generated",
              "initial",
              "error"
            ]
          },
          "hideContent": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          }
        },
        "description": "Request schema for updating an opportunity"
      },
      "RelationshipAction": {
        "type": "string",
        "enum": [
          "add",
          "remove"
        ]
      },
      "OutcomeRelationshipsPayload": {
        "type": "object",
        "properties": {
          "opportunityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of opportunity IDs to associate with the outcome",
            "example": [
              "a1b2c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d"
            ]
          },
          "solutionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of solution IDs to associate with the outcome",
            "example": [
              "f6e5d4c3-b2a1-4b5a-9c8d-1e0f2a3b4c5d"
            ]
          },
          "feedbackIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of feedback IDs to associate with the outcome",
            "example": [
              "c5d4e3f2-a1b2-4c5d-8e9f-0a1b2c3d4e5f"
            ]
          }
        },
        "description": "Request body for managing outcome relationships"
      },
      "RequirementRelationshipsPayload": {
        "type": "object",
        "properties": {
          "opportunityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of opportunity IDs to associate with the requirement",
            "example": [
              "a1b2c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d"
            ]
          },
          "solutionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of solution IDs to associate with the requirement",
            "example": [
              "f6e5d4c3-b2a1-4b5a-9c8d-1e0f2a3b4c5d"
            ]
          },
          "outcomeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of outcome IDs to associate with the requirement",
            "example": [
              "c5d4e3f2-a1b2-4c5d-8e9f-0a1b2c3d4e5f"
            ]
          },
          "feedbackIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of feedback IDs to associate with the requirement",
            "example": [
              "b2a1c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d"
            ]
          }
        },
        "description": "Request body for managing requirement relationships"
      },
      "SolutionRelationshipsPayload": {
        "type": "object",
        "properties": {
          "opportunityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of opportunity IDs to associate with the solution",
            "example": [
              "a1b2c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d"
            ]
          },
          "outcomeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of outcome IDs to associate with the solution",
            "example": [
              "f6e5d4c3-b2a1-4b5a-9c8d-1e0f2a3b4c5d"
            ]
          },
          "feedbackIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of feedback IDs to associate with the solution",
            "example": [
              "c5d4e3f2-a1b2-4c5d-8e9f-0a1b2c3d4e5f"
            ]
          }
        },
        "description": "Request body for managing solution relationships"
      }
    },
    "parameters": {
      "OutcomeRelationshipsParam": {
        "in": "query",
        "name": "relationships",
        "required": false,
        "description": "Comma-separated list of relationships to include in the response",
        "example": "opportunities,solutions,requirements,feedback",
        "schema": {
          "type": "string"
        }
      },
      "FeedbackRelationshipsParam": {
        "in": "query",
        "name": "relationships",
        "required": false,
        "description": "Comma-separated list of relationships to include in the response",
        "example": "opportunities,solutions,requirements,outcomes",
        "schema": {
          "type": "string"
        }
      },
      "OpportunityRelationshipsParam": {
        "in": "query",
        "name": "relationships",
        "required": false,
        "description": "Comma-separated list of relationships to include in the response",
        "example": "solutions,requirements,outcomes,feedback",
        "schema": {
          "type": "string"
        }
      },
      "RequirementRelationshipsParam": {
        "in": "query",
        "name": "relationships",
        "required": false,
        "description": "Comma-separated list of relationships to include in the response",
        "example": "solutions,opportunities,outcomes,feedback",
        "schema": {
          "type": "string"
        }
      },
      "SolutionRelationshipsParam": {
        "in": "query",
        "name": "relationships",
        "required": false,
        "description": "Comma-separated list of relationships to include in the response",
        "example": "opportunities,requirements,outcomes,feedback",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}